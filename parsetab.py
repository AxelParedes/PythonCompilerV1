
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightPOWERleftMODULOleftTIMESDIVIDEleftPLUSMINnonassocLTLEGTGENEEEQleftANDORAND ASSIGN BOOL CASE CASE CIN COMMA COUT DECREMENT DIVIDE DO DO DO EEQ ELSE ELSE END END EQ ERROR FALSE FLOAT GE GT ID IF IF INCREMENT INT LBRACE LE LPAREN LSHIFT LT MAIN MIN MODULO NE NOT NUMBER OP_IN OP_OUT OR PLUS POWER RBRACE REAL RPAREN RSHIFT SEMICOLON STRING SWITCH SWITCH THEN THEN TIMES TRUE UNTIL UNTIL WHILE WHILEprograma : MAIN LBRACE lista_declaracion RBRACElista_declaracion : lista_declaracion declaracion\n                        | declaraciondeclaracion : declaracion_variable \n                  | lista_sentenciaslista_identificadores : ID\n                            | ID COMMA lista_identificadoresdeclaracion_variable : tipo lista_identificadores SEMICOLONidentificador : ID\n                    | ID COMMA identificadortipo : INT\n           | FLOATlista_sentencias : lista_sentencias repeticion\n                       | lista_sentencias seleccion\n                       | lista_sentencias sentencia\n                       | repeticion\n                       | seleccion\n                       | sentenciasentencia : seleccion\n                | iteracion\n                | repeticion\n                | sent_in\n                | sent_out\n                | asignacion\n                | inc_dec_expinc_dec_exp : ID INCREMENT SEMICOLON\n                  | ID DECREMENT SEMICOLONasignacion : ID EQ expresion SEMICOLONsent_expresion : expresion SEMICOLONseleccion : IF condicion THEN bloque_condicional\n                | IF condicion THEN bloque_condicional ELSE bloque_condicionalcondicion : expresion\n                | expresion_relacional\n                | expresion_logicabloque : LBRACE lista_sentencias RBRACE\n             | sentenciabloque_condicional : LBRACE lista_sentencias RBRACE\n                         | sentencia\n                         | lista_sentencias ENDempty :iteracion : WHILE LPAREN expresion RPAREN LBRACE lista_sentencias RBRACE\n                 | WHILE expresion lista_sentencias ENDrepeticion : DO lista_sentencias bloque_while_opcional UNTIL expresion\n                  | WHILE expresion lista_sentencias ENDbloque_while_opcional : WHILE expresion lista_sentencias END\n                            | emptyanidados_while : WHILE expresion lista_sentencias END\n                     | emptybloque_repeticion : LBRACE lista_sentencias RBRACE\n                        | sentencia\n                        | lista_sentencias ENDsent_in : CIN OP_IN ID SEMICOLON\n              | CIN OP_IN ID OP_IN ID SEMICOLONsent_out : COUT OP_OUT expresion SEMICOLON\n               | COUT OP_OUT expresion OP_OUT expresion SEMICOLONexpresion_simple : termino\n                       | expresion_simple PLUS termino\n                       | expresion_simple MIN terminoexpresion : expresion_relacional\n                | expresion logico_op expresion_relacionalexpresion_condicion : expresion_relacional\n                          | expresionexpresion_logica : expresion_relacional\n                       | expresion_logica AND expresion_relacional\n                       | expresion_logica OR expresion_relacional\n                       | NOT expresion_relacionalcomponente : LPAREN expresion RPAREN\n                 | numero\n                 | IDlogico_op : AND\n                | ORexpresion_relacional : expresion_simple\n                           | expresion_simple relacion_op expresion_simplerelacion_op : LT\n                  | LE\n                  | GT\n                  | GE\n                  | NE\n                  | EEQsuma_op : PLUS\n              | MINtermino : factor\n              | termino TIMES factor\n              | termino DIVIDE factor\n              | termino MODULO factormult_op : TIMES\n              | DIVIDE\n              | MODULOfactor : componente\n             | componente POWER componentepot_op : POWERnumero : NUMBER\n             | REAL\n             | MIN NUMBER %prec MIN\n             | MIN REAL %prec MIN'
    
_lr_action_items = {'MAIN':([0,],[2,]),'$end':([1,25,],[0,-1,]),'LBRACE':([2,81,96,122,],[3,105,121,105,]),'INT':([3,4,5,6,7,9,10,11,17,18,19,20,21,26,27,28,29,35,36,37,39,40,41,42,43,44,56,78,79,88,89,94,95,97,98,99,100,101,102,103,104,107,108,109,113,115,116,118,119,124,130,131,133,134,135,136,],[12,12,-3,-4,-5,-16,-17,-18,-20,-22,-23,-24,-25,-2,-13,-14,-15,-59,-72,-56,-82,-89,-68,-69,-92,-93,-8,-94,-95,-26,-27,-42,-60,-73,-57,-58,-83,-84,-85,-90,-30,-38,-19,-21,-67,-52,-28,-54,-43,-39,-31,-37,-53,-55,-41,-42,]),'FLOAT':([3,4,5,6,7,9,10,11,17,18,19,20,21,26,27,28,29,35,36,37,39,40,41,42,43,44,56,78,79,88,89,94,95,97,98,99,100,101,102,103,104,107,108,109,113,115,116,118,119,124,130,131,133,134,135,136,],[13,13,-3,-4,-5,-16,-17,-18,-20,-22,-23,-24,-25,-2,-13,-14,-15,-59,-72,-56,-82,-89,-68,-69,-92,-93,-8,-94,-95,-26,-27,-42,-60,-73,-57,-58,-83,-84,-85,-90,-30,-38,-19,-21,-67,-52,-28,-54,-43,-39,-31,-37,-53,-55,-41,-42,]),'DO':([3,4,5,6,7,9,10,11,14,17,18,19,20,21,26,27,28,29,32,33,35,36,37,39,40,41,42,43,44,56,61,78,79,81,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,115,116,118,119,120,121,122,123,124,125,128,129,130,131,132,133,134,135,136,],[14,14,-3,-4,14,-16,-17,-18,14,-20,-22,-23,-24,-25,-2,-13,-14,-15,14,14,-59,-72,-56,-82,-89,-68,-69,-92,-93,-8,14,-94,-95,14,-26,-27,14,-42,-60,-67,-73,-57,-58,-83,-84,-85,-90,-30,14,14,-18,-17,-16,-67,-52,-28,-54,-43,14,14,14,14,-39,14,-42,14,-31,-37,14,-53,-55,-41,-42,]),'WHILE':([3,4,5,6,7,9,10,11,14,17,18,19,20,21,26,27,28,29,32,33,35,36,37,39,40,41,42,43,44,56,61,78,79,81,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,115,116,118,119,120,121,122,123,124,125,128,129,130,131,132,133,134,135,136,],[15,15,-3,-4,15,-16,-17,-18,15,-20,-22,-23,-24,-25,-2,-13,-14,-15,59,15,-59,-72,-56,-82,-89,-68,-69,-92,-93,-8,15,-94,-95,110,-26,-27,15,-42,-60,-67,-73,-57,-58,-83,-84,-85,-90,-30,15,15,-18,-17,-16,-67,-52,-28,-54,-43,15,15,110,15,-39,15,-42,15,-31,-37,15,-53,-55,-41,-42,]),'IF':([3,4,5,6,7,9,10,11,14,17,18,19,20,21,26,27,28,29,32,33,35,36,37,39,40,41,42,43,44,56,61,78,79,81,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,115,116,118,119,120,121,122,123,124,125,128,129,130,131,132,133,134,135,136,],[16,16,-3,-4,16,-16,-17,-18,16,-20,-22,-23,-24,-25,-2,-13,-14,-15,16,16,-59,-72,-56,-82,-89,-68,-69,-92,-93,-8,16,-94,-95,16,-26,-27,16,-42,-60,-67,-73,-57,-58,-83,-84,-85,-90,-30,16,16,-18,-17,-16,-67,-52,-28,-54,-43,16,16,16,16,-39,16,-42,16,-31,-37,16,-53,-55,-41,-42,]),'CIN':([3,4,5,6,7,9,10,11,14,17,18,19,20,21,26,27,28,29,32,33,35,36,37,39,40,41,42,43,44,56,61,78,79,81,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,115,116,118,119,120,121,122,123,124,125,128,129,130,131,132,133,134,135,136,],[22,22,-3,-4,22,-16,-17,-18,22,-20,-22,-23,-24,-25,-2,-13,-14,-15,22,22,-59,-72,-56,-82,-89,-68,-69,-92,-93,-8,22,-94,-95,22,-26,-27,22,-42,-60,-67,-73,-57,-58,-83,-84,-85,-90,-30,22,22,-18,-17,-16,-67,-52,-28,-54,-43,22,22,22,22,-39,22,-42,22,-31,-37,22,-53,-55,-41,-42,]),'COUT':([3,4,5,6,7,9,10,11,14,17,18,19,20,21,26,27,28,29,32,33,35,36,37,39,40,41,42,43,44,56,61,78,79,81,88,89,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,115,116,118,119,120,121,122,123,124,125,128,129,130,131,132,133,134,135,136,],[24,24,-3,-4,24,-16,-17,-18,24,-20,-22,-23,-24,-25,-2,-13,-14,-15,24,24,-59,-72,-56,-82,-89,-68,-69,-92,-93,-8,24,-94,-95,24,-26,-27,24,-42,-60,-67,-73,-57,-58,-83,-84,-85,-90,-30,24,24,-18,-17,-16,-67,-52,-28,-54,-43,24,24,24,24,-39,24,-42,24,-31,-37,24,-53,-55,-41,-42,]),'ID':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,32,33,34,35,36,37,39,40,41,42,43,44,49,50,51,52,55,56,57,59,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,128,129,130,131,132,133,134,135,136,],[23,23,-3,-4,23,31,-16,-17,-18,-11,-12,23,42,42,-20,-22,-23,-24,-25,-2,-13,-14,-15,23,23,42,-59,-72,-56,-82,-89,-68,-69,-92,-93,42,42,86,42,42,-8,31,42,23,42,-70,-71,42,42,42,-74,-75,-76,-77,-78,-79,42,42,42,-94,-95,42,23,42,42,-26,-27,42,23,-42,-60,-67,-73,-57,-58,-83,-84,-85,-90,-30,23,23,-18,-17,-16,42,-67,126,-52,-28,42,-54,-43,23,23,23,23,-39,23,-42,23,-31,-37,23,-53,-55,-41,-42,]),'RBRACE':([4,5,6,7,9,10,11,17,18,19,20,21,26,27,28,29,35,36,37,39,40,41,42,43,44,56,78,79,88,89,94,95,97,98,99,100,101,102,103,104,107,108,109,113,115,116,118,119,123,124,129,130,131,133,134,135,136,],[25,-3,-4,-5,-16,-17,-18,-20,-22,-23,-24,-25,-2,-13,-14,-15,-59,-72,-56,-82,-89,-68,-69,-92,-93,-8,-94,-95,-26,-27,-42,-60,-73,-57,-58,-83,-84,-85,-90,-30,-38,-19,-21,-67,-52,-28,-54,-43,131,-39,135,-31,-37,-53,-55,-41,-42,]),'UNTIL':([9,10,11,17,18,19,20,21,27,28,29,32,35,36,37,39,40,41,42,43,44,58,60,78,79,88,89,94,95,97,98,99,100,101,102,103,104,107,108,109,113,115,116,118,119,124,128,130,131,133,134,135,136,],[-16,-17,-18,-20,-22,-23,-24,-25,-13,-14,-15,-40,-59,-72,-56,-82,-89,-68,-69,-92,-93,92,-46,-94,-95,-26,-27,-42,-60,-73,-57,-58,-83,-84,-85,-90,-30,-38,-19,-21,-67,-52,-28,-54,-43,-39,-42,-31,-37,-53,-55,-41,-42,]),'END':([9,10,11,17,18,19,20,21,27,28,29,35,36,37,39,40,41,42,43,44,61,78,79,88,89,94,95,97,98,99,100,101,102,103,104,106,107,108,109,113,115,116,118,119,120,124,130,131,132,133,134,135,136,],[-16,-17,-18,-20,-22,-23,-24,-25,-13,-14,-15,-59,-72,-56,-82,-89,-68,-69,-92,-93,94,-94,-95,-26,-27,-42,-60,-73,-57,-58,-83,-84,-85,-90,-30,124,-18,-17,-16,-67,-52,-28,-54,-43,128,-39,-31,-37,136,-53,-55,-41,-42,]),'LPAREN':([15,16,34,49,50,52,55,59,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,80,82,83,92,110,117,],[34,50,50,50,50,50,50,34,50,-70,-71,50,50,50,-74,-75,-76,-77,-78,-79,50,50,50,50,50,50,50,34,50,]),'NUMBER':([15,16,34,38,49,50,52,55,59,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,80,82,83,92,110,117,],[43,43,43,78,43,43,43,43,43,43,-70,-71,43,43,43,-74,-75,-76,-77,-78,-79,43,43,43,43,43,43,43,43,43,]),'REAL':([15,16,34,38,49,50,52,55,59,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,80,82,83,92,110,117,],[44,44,44,79,44,44,44,44,44,44,-70,-71,44,44,44,-74,-75,-76,-77,-78,-79,44,44,44,44,44,44,44,44,44,]),'MIN':([15,16,34,36,37,39,40,41,42,43,44,49,50,52,55,59,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,92,96,97,98,99,100,101,102,103,110,113,117,],[38,38,38,68,-56,-82,-89,-68,-69,-92,-93,38,38,38,38,38,38,-70,-71,38,38,38,-74,-75,-76,-77,-78,-79,38,38,38,-94,-95,38,38,38,38,-67,68,-57,-58,-83,-84,-85,-90,38,-67,38,]),'NOT':([16,],[49,]),'ELSE':([17,18,19,20,21,35,36,37,39,40,41,42,43,44,78,79,88,89,95,97,98,99,100,101,102,103,104,107,108,109,113,115,116,118,119,124,130,131,133,134,135,136,],[-20,-22,-23,-24,-25,-59,-72,-56,-82,-89,-68,-69,-92,-93,-94,-95,-26,-27,-60,-73,-57,-58,-83,-84,-85,-90,122,-38,-19,-21,-67,-52,-28,-54,-43,-39,-31,-37,-53,-55,-41,-42,]),'OP_IN':([22,86,],[51,114,]),'EQ':([23,],[52,]),'INCREMENT':([23,],[53,]),'DECREMENT':([23,],[54,]),'OP_OUT':([24,35,36,37,39,40,41,42,43,44,78,79,90,95,97,98,99,100,101,102,103,113,],[55,-59,-72,-56,-82,-89,-68,-69,-92,-93,-94,-95,117,-60,-73,-57,-58,-83,-84,-85,-90,-67,]),'SEMICOLON':([30,31,35,36,37,39,40,41,42,43,44,53,54,78,79,86,87,90,91,95,97,98,99,100,101,102,103,113,126,127,],[56,-6,-59,-72,-56,-82,-89,-68,-69,-92,-93,88,89,-94,-95,115,116,118,-7,-60,-73,-57,-58,-83,-84,-85,-90,-67,133,134,]),'COMMA':([31,],[57,]),'AND':([33,35,36,37,39,40,41,42,43,44,46,47,48,65,78,79,84,85,87,90,93,95,96,97,98,99,100,101,102,103,111,112,113,119,125,127,],[63,-59,-72,-56,-82,-89,-68,-69,-92,-93,63,-59,82,63,-94,-95,-66,63,63,63,63,-60,-67,-73,-57,-58,-83,-84,-85,-90,-64,-65,-67,63,63,63,]),'OR':([33,35,36,37,39,40,41,42,43,44,46,47,48,65,78,79,84,85,87,90,93,95,96,97,98,99,100,101,102,103,111,112,113,119,125,127,],[64,-59,-72,-56,-82,-89,-68,-69,-92,-93,64,-59,83,64,-94,-95,-66,64,64,64,64,-60,-67,-73,-57,-58,-83,-84,-85,-90,-64,-65,-67,64,64,64,]),'RPAREN':([35,36,37,39,40,41,42,43,44,65,78,79,85,95,97,98,99,100,101,102,103,113,],[-59,-72,-56,-82,-89,-68,-69,-92,-93,96,-94,-95,113,-60,-73,-57,-58,-83,-84,-85,-90,-67,]),'THEN':([36,37,39,40,41,42,43,44,45,46,47,48,78,79,84,95,97,98,99,100,101,102,103,111,112,113,],[-72,-56,-82,-89,-68,-69,-92,-93,81,-32,-33,-34,-94,-95,-66,-60,-73,-57,-58,-83,-84,-85,-90,-64,-65,-67,]),'PLUS':([36,37,39,40,41,42,43,44,78,79,96,97,98,99,100,101,102,103,113,],[67,-56,-82,-89,-68,-69,-92,-93,-94,-95,-67,67,-57,-58,-83,-84,-85,-90,-67,]),'LT':([36,37,39,40,41,42,43,44,78,79,96,98,99,100,101,102,103,113,],[69,-56,-82,-89,-68,-69,-92,-93,-94,-95,-67,-57,-58,-83,-84,-85,-90,-67,]),'LE':([36,37,39,40,41,42,43,44,78,79,96,98,99,100,101,102,103,113,],[70,-56,-82,-89,-68,-69,-92,-93,-94,-95,-67,-57,-58,-83,-84,-85,-90,-67,]),'GT':([36,37,39,40,41,42,43,44,78,79,96,98,99,100,101,102,103,113,],[71,-56,-82,-89,-68,-69,-92,-93,-94,-95,-67,-57,-58,-83,-84,-85,-90,-67,]),'GE':([36,37,39,40,41,42,43,44,78,79,96,98,99,100,101,102,103,113,],[72,-56,-82,-89,-68,-69,-92,-93,-94,-95,-67,-57,-58,-83,-84,-85,-90,-67,]),'NE':([36,37,39,40,41,42,43,44,78,79,96,98,99,100,101,102,103,113,],[73,-56,-82,-89,-68,-69,-92,-93,-94,-95,-67,-57,-58,-83,-84,-85,-90,-67,]),'EEQ':([36,37,39,40,41,42,43,44,78,79,96,98,99,100,101,102,103,113,],[74,-56,-82,-89,-68,-69,-92,-93,-94,-95,-67,-57,-58,-83,-84,-85,-90,-67,]),'TIMES':([37,39,40,41,42,43,44,78,79,96,98,99,100,101,102,103,113,],[75,-82,-89,-68,-69,-92,-93,-94,-95,-67,75,75,-83,-84,-85,-90,-67,]),'DIVIDE':([37,39,40,41,42,43,44,78,79,96,98,99,100,101,102,103,113,],[76,-82,-89,-68,-69,-92,-93,-94,-95,-67,76,76,-83,-84,-85,-90,-67,]),'MODULO':([37,39,40,41,42,43,44,78,79,96,98,99,100,101,102,103,113,],[77,-82,-89,-68,-69,-92,-93,-94,-95,-67,77,77,-83,-84,-85,-90,-67,]),'POWER':([40,41,42,43,44,78,79,96,113,],[80,-68,-69,-92,-93,-94,-95,-67,-67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_declaracion':([3,],[4,]),'declaracion':([3,4,],[5,26,]),'declaracion_variable':([3,4,],[6,6,]),'lista_sentencias':([3,4,14,33,81,93,105,121,122,125,],[7,7,32,61,106,120,123,129,106,132,]),'tipo':([3,4,],[8,8,]),'repeticion':([3,4,7,14,32,33,61,81,93,105,106,120,121,122,123,125,129,132,],[9,9,27,9,27,9,27,109,9,9,27,27,9,109,27,9,27,27,]),'seleccion':([3,4,7,14,32,33,61,81,93,105,106,120,121,122,123,125,129,132,],[10,10,28,10,28,10,28,108,10,10,28,28,10,108,28,10,28,28,]),'sentencia':([3,4,7,14,32,33,61,81,93,105,106,120,121,122,123,125,129,132,],[11,11,29,11,29,11,29,107,11,11,29,29,11,107,29,11,29,29,]),'iteracion':([3,4,7,14,32,33,61,81,93,105,106,120,121,122,123,125,129,132,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'sent_in':([3,4,7,14,32,33,61,81,93,105,106,120,121,122,123,125,129,132,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'sent_out':([3,4,7,14,32,33,61,81,93,105,106,120,121,122,123,125,129,132,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'asignacion':([3,4,7,14,32,33,61,81,93,105,106,120,121,122,123,125,129,132,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'inc_dec_exp':([3,4,7,14,32,33,61,81,93,105,106,120,121,122,123,125,129,132,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'lista_identificadores':([8,57,],[30,91,]),'expresion':([15,16,34,50,52,55,59,92,110,117,],[33,46,65,85,87,90,93,119,125,127,]),'expresion_relacional':([15,16,34,49,50,52,55,59,62,82,83,92,110,117,],[35,47,35,84,35,35,35,35,95,111,112,35,35,35,]),'expresion_simple':([15,16,34,49,50,52,55,59,62,66,82,83,92,110,117,],[36,36,36,36,36,36,36,36,36,97,36,36,36,36,36,]),'termino':([15,16,34,49,50,52,55,59,62,66,67,68,82,83,92,110,117,],[37,37,37,37,37,37,37,37,37,37,98,99,37,37,37,37,37,]),'factor':([15,16,34,49,50,52,55,59,62,66,67,68,75,76,77,82,83,92,110,117,],[39,39,39,39,39,39,39,39,39,39,39,39,100,101,102,39,39,39,39,39,]),'componente':([15,16,34,49,50,52,55,59,62,66,67,68,75,76,77,80,82,83,92,110,117,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,103,40,40,40,40,40,]),'numero':([15,16,34,49,50,52,55,59,62,66,67,68,75,76,77,80,82,83,92,110,117,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'condicion':([16,],[45,]),'expresion_logica':([16,],[48,]),'bloque_while_opcional':([32,],[58,]),'empty':([32,],[60,]),'logico_op':([33,46,65,85,87,90,93,119,125,127,],[62,62,62,62,62,62,62,62,62,62,]),'relacion_op':([36,],[66,]),'bloque_condicional':([81,122,],[104,130,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> MAIN LBRACE lista_declaracion RBRACE','programa',4,'p_programa','sintactico.py',57),
  ('lista_declaracion -> lista_declaracion declaracion','lista_declaracion',2,'p_lista_declaracion','sintactico.py',61),
  ('lista_declaracion -> declaracion','lista_declaracion',1,'p_lista_declaracion','sintactico.py',62),
  ('declaracion -> declaracion_variable','declaracion',1,'p_declaracion','sintactico.py',69),
  ('declaracion -> lista_sentencias','declaracion',1,'p_declaracion','sintactico.py',70),
  ('lista_identificadores -> ID','lista_identificadores',1,'p_lista_identificadores','sintactico.py',74),
  ('lista_identificadores -> ID COMMA lista_identificadores','lista_identificadores',3,'p_lista_identificadores','sintactico.py',75),
  ('declaracion_variable -> tipo lista_identificadores SEMICOLON','declaracion_variable',3,'p_declaracion_variable','sintactico.py',85),
  ('identificador -> ID','identificador',1,'p_identificador','sintactico.py',89),
  ('identificador -> ID COMMA identificador','identificador',3,'p_identificador','sintactico.py',90),
  ('tipo -> INT','tipo',1,'p_tipo','sintactico.py',100),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintactico.py',101),
  ('lista_sentencias -> lista_sentencias repeticion','lista_sentencias',2,'p_lista_sentencias','sintactico.py',105),
  ('lista_sentencias -> lista_sentencias seleccion','lista_sentencias',2,'p_lista_sentencias','sintactico.py',106),
  ('lista_sentencias -> lista_sentencias sentencia','lista_sentencias',2,'p_lista_sentencias','sintactico.py',107),
  ('lista_sentencias -> repeticion','lista_sentencias',1,'p_lista_sentencias','sintactico.py',108),
  ('lista_sentencias -> seleccion','lista_sentencias',1,'p_lista_sentencias','sintactico.py',109),
  ('lista_sentencias -> sentencia','lista_sentencias',1,'p_lista_sentencias','sintactico.py',110),
  ('sentencia -> seleccion','sentencia',1,'p_sentencia','sintactico.py',117),
  ('sentencia -> iteracion','sentencia',1,'p_sentencia','sintactico.py',118),
  ('sentencia -> repeticion','sentencia',1,'p_sentencia','sintactico.py',119),
  ('sentencia -> sent_in','sentencia',1,'p_sentencia','sintactico.py',120),
  ('sentencia -> sent_out','sentencia',1,'p_sentencia','sintactico.py',121),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sintactico.py',122),
  ('sentencia -> inc_dec_exp','sentencia',1,'p_sentencia','sintactico.py',123),
  ('inc_dec_exp -> ID INCREMENT SEMICOLON','inc_dec_exp',3,'p_inc_dec_exp','sintactico.py',128),
  ('inc_dec_exp -> ID DECREMENT SEMICOLON','inc_dec_exp',3,'p_inc_dec_exp','sintactico.py',129),
  ('asignacion -> ID EQ expresion SEMICOLON','asignacion',4,'p_asignacion','sintactico.py',141),
  ('sent_expresion -> expresion SEMICOLON','sent_expresion',2,'p_sent_expresion','sintactico.py',151),
  ('seleccion -> IF condicion THEN bloque_condicional','seleccion',4,'p_seleccion','sintactico.py',155),
  ('seleccion -> IF condicion THEN bloque_condicional ELSE bloque_condicional','seleccion',6,'p_seleccion','sintactico.py',156),
  ('condicion -> expresion','condicion',1,'p_condicion','sintactico.py',163),
  ('condicion -> expresion_relacional','condicion',1,'p_condicion','sintactico.py',164),
  ('condicion -> expresion_logica','condicion',1,'p_condicion','sintactico.py',165),
  ('bloque -> LBRACE lista_sentencias RBRACE','bloque',3,'p_bloque','sintactico.py',169),
  ('bloque -> sentencia','bloque',1,'p_bloque','sintactico.py',170),
  ('bloque_condicional -> LBRACE lista_sentencias RBRACE','bloque_condicional',3,'p_bloque_condicional','sintactico.py',177),
  ('bloque_condicional -> sentencia','bloque_condicional',1,'p_bloque_condicional','sintactico.py',178),
  ('bloque_condicional -> lista_sentencias END','bloque_condicional',2,'p_bloque_condicional','sintactico.py',179),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',188),
  ('iteracion -> WHILE LPAREN expresion RPAREN LBRACE lista_sentencias RBRACE','iteracion',7,'p_iteracion','sintactico.py',192),
  ('iteracion -> WHILE expresion lista_sentencias END','iteracion',4,'p_iteracion','sintactico.py',193),
  ('repeticion -> DO lista_sentencias bloque_while_opcional UNTIL expresion','repeticion',5,'p_repeticion','sintactico.py',200),
  ('repeticion -> WHILE expresion lista_sentencias END','repeticion',4,'p_repeticion','sintactico.py',201),
  ('bloque_while_opcional -> WHILE expresion lista_sentencias END','bloque_while_opcional',4,'p_bloque_while_opcional','sintactico.py',208),
  ('bloque_while_opcional -> empty','bloque_while_opcional',1,'p_bloque_while_opcional','sintactico.py',209),
  ('anidados_while -> WHILE expresion lista_sentencias END','anidados_while',4,'p_anidados_while','sintactico.py',216),
  ('anidados_while -> empty','anidados_while',1,'p_anidados_while','sintactico.py',217),
  ('bloque_repeticion -> LBRACE lista_sentencias RBRACE','bloque_repeticion',3,'p_bloque_repeticion','sintactico.py',224),
  ('bloque_repeticion -> sentencia','bloque_repeticion',1,'p_bloque_repeticion','sintactico.py',225),
  ('bloque_repeticion -> lista_sentencias END','bloque_repeticion',2,'p_bloque_repeticion','sintactico.py',226),
  ('sent_in -> CIN OP_IN ID SEMICOLON','sent_in',4,'p_sent_in','sintactico.py',235),
  ('sent_in -> CIN OP_IN ID OP_IN ID SEMICOLON','sent_in',6,'p_sent_in','sintactico.py',236),
  ('sent_out -> COUT OP_OUT expresion SEMICOLON','sent_out',4,'p_sent_out','sintactico.py',248),
  ('sent_out -> COUT OP_OUT expresion OP_OUT expresion SEMICOLON','sent_out',6,'p_sent_out','sintactico.py',249),
  ('expresion_simple -> termino','expresion_simple',1,'p_expresion_simple','sintactico.py',256),
  ('expresion_simple -> expresion_simple PLUS termino','expresion_simple',3,'p_expresion_simple','sintactico.py',257),
  ('expresion_simple -> expresion_simple MIN termino','expresion_simple',3,'p_expresion_simple','sintactico.py',258),
  ('expresion -> expresion_relacional','expresion',1,'p_expresion','sintactico.py',265),
  ('expresion -> expresion logico_op expresion_relacional','expresion',3,'p_expresion','sintactico.py',266),
  ('expresion_condicion -> expresion_relacional','expresion_condicion',1,'p_expresion_condicion','sintactico.py',273),
  ('expresion_condicion -> expresion','expresion_condicion',1,'p_expresion_condicion','sintactico.py',274),
  ('expresion_logica -> expresion_relacional','expresion_logica',1,'p_expresion_logica','sintactico.py',278),
  ('expresion_logica -> expresion_logica AND expresion_relacional','expresion_logica',3,'p_expresion_logica','sintactico.py',279),
  ('expresion_logica -> expresion_logica OR expresion_relacional','expresion_logica',3,'p_expresion_logica','sintactico.py',280),
  ('expresion_logica -> NOT expresion_relacional','expresion_logica',2,'p_expresion_logica','sintactico.py',281),
  ('componente -> LPAREN expresion RPAREN','componente',3,'p_componente','sintactico.py',290),
  ('componente -> numero','componente',1,'p_componente','sintactico.py',291),
  ('componente -> ID','componente',1,'p_componente','sintactico.py',292),
  ('logico_op -> AND','logico_op',1,'p_logico_op','sintactico.py',300),
  ('logico_op -> OR','logico_op',1,'p_logico_op','sintactico.py',301),
  ('expresion_relacional -> expresion_simple','expresion_relacional',1,'p_expresion_relacional','sintactico.py',305),
  ('expresion_relacional -> expresion_simple relacion_op expresion_simple','expresion_relacional',3,'p_expresion_relacional','sintactico.py',306),
  ('relacion_op -> LT','relacion_op',1,'p_relacion_op','sintactico.py',316),
  ('relacion_op -> LE','relacion_op',1,'p_relacion_op','sintactico.py',317),
  ('relacion_op -> GT','relacion_op',1,'p_relacion_op','sintactico.py',318),
  ('relacion_op -> GE','relacion_op',1,'p_relacion_op','sintactico.py',319),
  ('relacion_op -> NE','relacion_op',1,'p_relacion_op','sintactico.py',320),
  ('relacion_op -> EEQ','relacion_op',1,'p_relacion_op','sintactico.py',321),
  ('suma_op -> PLUS','suma_op',1,'p_suma_op','sintactico.py',325),
  ('suma_op -> MIN','suma_op',1,'p_suma_op','sintactico.py',326),
  ('termino -> factor','termino',1,'p_termino','sintactico.py',330),
  ('termino -> termino TIMES factor','termino',3,'p_termino','sintactico.py',331),
  ('termino -> termino DIVIDE factor','termino',3,'p_termino','sintactico.py',332),
  ('termino -> termino MODULO factor','termino',3,'p_termino','sintactico.py',333),
  ('mult_op -> TIMES','mult_op',1,'p_mult_op','sintactico.py',340),
  ('mult_op -> DIVIDE','mult_op',1,'p_mult_op','sintactico.py',341),
  ('mult_op -> MODULO','mult_op',1,'p_mult_op','sintactico.py',342),
  ('factor -> componente','factor',1,'p_factor','sintactico.py',346),
  ('factor -> componente POWER componente','factor',3,'p_factor','sintactico.py',347),
  ('pot_op -> POWER','pot_op',1,'p_pot_op','sintactico.py',354),
  ('numero -> NUMBER','numero',1,'p_numero','sintactico.py',358),
  ('numero -> REAL','numero',1,'p_numero','sintactico.py',359),
  ('numero -> MIN NUMBER','numero',2,'p_numero','sintactico.py',360),
  ('numero -> MIN REAL','numero',2,'p_numero','sintactico.py',361),
]
